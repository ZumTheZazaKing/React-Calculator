{"version":3,"sources":["index.js"],"names":["InputField","props","className","type","value","data","readOnly","Button","onClick","e","handleClick","target","innerHTML","Calculator","useState","setValue","addition","mexp","eval","el","ReactDOM","render","document","getElementById"],"mappings":"wKAMA,SAASA,EAAWC,GAElB,OAAO,qBAAKC,UAAU,aAAf,SAEL,uBAAOC,KAAK,OAAOC,MAAOH,EAAMI,KAAMC,UAAU,MAMpD,SAASC,EAAON,GAEd,OAAO,sBAAKC,UAAU,UAAf,UAEH,wBAAQA,UAAU,QAAQM,QAAS,SAAAC,GAAC,OAAIR,EAAMS,YAAYD,EAAEE,OAAOC,YAAnE,eACA,wBAAQJ,QAAS,SAAAC,GAAC,OAAIR,EAAMS,YAAYD,EAAEE,OAAOC,YAAjD,eACA,wBAAQJ,QAAS,SAAAC,GAAC,OAAIR,EAAMS,YAAYD,EAAEE,OAAOC,YAAjD,eACA,wBAAQJ,QAAS,SAAAC,GAAC,OAAIR,EAAMS,YAAYD,EAAEE,OAAOC,YAAjD,eACA,wBAAQJ,QAAS,SAAAC,GAAC,OAAIR,EAAMS,YAAYD,EAAEE,OAAOC,YAAjD,eACA,wBAAQJ,QAAS,SAAAC,GAAC,OAAIR,EAAMS,YAAYD,EAAEE,OAAOC,YAAjD,eACA,wBAAQJ,QAAS,SAAAC,GAAC,OAAIR,EAAMS,YAAYD,EAAEE,OAAOC,YAAjD,eACA,wBAAQJ,QAAS,SAAAC,GAAC,OAAIR,EAAMS,YAAYD,EAAEE,OAAOC,YAAjD,eACA,wBAAQJ,QAAS,SAAAC,GAAC,OAAIR,EAAMS,YAAYD,EAAEE,OAAOC,YAAjD,eACA,wBAAQJ,QAAS,SAAAC,GAAC,OAAIR,EAAMS,YAAYD,EAAEE,OAAOC,YAAjD,eACA,wBAAQV,UAAU,OAAOM,QAAS,SAAAC,GAAC,OAAIR,EAAMS,YAAYD,EAAEE,OAAOC,YAAlE,eACA,wBAAQJ,QAAS,SAAAC,GAAC,OAAIR,EAAMS,YAAYD,EAAEE,OAAOC,YAAjD,eACA,wBAAQJ,QAAS,SAAAC,GAAC,OAAIR,EAAMS,YAAYD,EAAEE,OAAOC,YAAjD,eACA,wBAAQJ,QAAS,SAAAC,GAAC,OAAIR,EAAMS,YAAYD,EAAEE,OAAOC,YAAjD,eACA,wBAAQJ,QAAS,SAAAC,GAAC,OAAIR,EAAMS,YAAYD,EAAEE,OAAOC,YAAjD,eACA,wBAAQJ,QAAS,SAAAC,GAAC,OAAIR,EAAMS,YAAYD,EAAEE,OAAOC,YAAjD,gBACA,wBAAQJ,QAAS,SAAAC,GAAC,OAAIR,EAAMS,YAAYD,EAAEE,OAAOC,YAAjD,eACA,wBAAQV,UAAU,QAAQM,QAAS,SAAAC,GAAC,OAAIR,EAAMS,YAAYD,EAAEE,OAAOC,YAAnE,kBAUN,SAASC,IAEP,MAA0BC,mBAAS,IAAnC,mBAAOV,EAAP,KAAcW,EAAd,KAiBA,OAAO,sBAAKb,UAAU,YAAf,UAEL,cAACF,EAAD,CAAYK,KAAMD,IAClB,cAACG,EAAD,CAAQG,YAlBV,SAAqBM,GAEnB,MAAgB,MAAbA,EACMD,EAAS,IAGF,MAAbC,EACMD,EAASE,IAAKC,KAAKd,SAG5BW,EAASX,EAAQY,SAerB,IAAMG,EAAK,cAACN,EAAD,IAEXO,IAASC,OAAOF,EAAIG,SAASC,eAAe,W","file":"static/js/main.c3507403.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport  mexp  from 'math-expression-evaluator';\n\n\nfunction InputField(props){\n\n  return <div className=\"valueField\">\n\n    <input type=\"text\" value={props.data} readOnly={true} />\n\n  </div>\n\n}\n\nfunction Button(props){\n\n  return <div className=\"buttons\">\n\n      <button className=\"clear\" onClick={e => props.handleClick(e.target.innerHTML)}>C</button>\n      <button onClick={e => props.handleClick(e.target.innerHTML)}>/</button>\n      <button onClick={e => props.handleClick(e.target.innerHTML)}>*</button>\n      <button onClick={e => props.handleClick(e.target.innerHTML)}>7</button>\n      <button onClick={e => props.handleClick(e.target.innerHTML)}>8</button>\n      <button onClick={e => props.handleClick(e.target.innerHTML)}>9</button>\n      <button onClick={e => props.handleClick(e.target.innerHTML)}>-</button>\n      <button onClick={e => props.handleClick(e.target.innerHTML)}>4</button>\n      <button onClick={e => props.handleClick(e.target.innerHTML)}>5</button>\n      <button onClick={e => props.handleClick(e.target.innerHTML)}>6</button>\n      <button className=\"plus\" onClick={e => props.handleClick(e.target.innerHTML)}>+</button>\n      <button onClick={e => props.handleClick(e.target.innerHTML)}>3</button>\n      <button onClick={e => props.handleClick(e.target.innerHTML)}>2</button>\n      <button onClick={e => props.handleClick(e.target.innerHTML)}>1</button>\n      <button onClick={e => props.handleClick(e.target.innerHTML)}>0</button>\n      <button onClick={e => props.handleClick(e.target.innerHTML)}>00</button>\n      <button onClick={e => props.handleClick(e.target.innerHTML)}>.</button>\n      <button className=\"equal\" onClick={e => props.handleClick(e.target.innerHTML)}>=</button>\n\n      \n\n    </div>\n\n}\n\n\n\nfunction Calculator(){\n\n  const [value, setValue] = useState(\"\");\n\n  function changeValue(addition){\n\n    if(addition === \"C\"){\n      return setValue(\"\")\n    }\n\n    if(addition === \"=\"){\n      return setValue(mexp.eval(value))\n    }\n\n    setValue(value + addition)\n\n  }\n\n\n  return <div className=\"container\">\n\n    <InputField data={value} />\n    <Button handleClick={changeValue} />\n\n  </div>\n\n\n}\n\nconst el = <Calculator />\n\nReactDOM.render(el, document.getElementById('root'));\n"],"sourceRoot":""}